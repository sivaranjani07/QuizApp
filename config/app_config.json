{
  "response_code": {
    "success": 600,
    "field_validation": 601,
    "error_dbissue_serverissue": 602,
    "not_found": 604,
    "token_updated": 605,
    "timeOut": 606,
    "no_data_found": 607,
    "unauthorize": 608,
    "url_error": 609,
    "duplication": 610
  },
  "tokenValidity": {
    "access": "1h",
    "refresh": "1d"
  },
  "token_detials": {
    "access_key": "access",
    "refresh_key": "refresh"
  },
  "errors": {
    "23505": 610,
    "Connection terminated due to connection timeout": 606
  },
  "aws": {
    "accesskey": "AKIA57YRBBPVJTVVWNGG",
    "secretkey": "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",
    "bucketName": "dev-flashcards"
  },
  "db_postgres": {
    "user": "flashcard",
    "port": 5432,
    "host": "10.0.46.103",
    "database": "flash_card_db",
    "password": "flashcard",
    "connectionTimeoutMillis": 2000
  },
  "errorMessage": {
    "duplication": "Already Exists.Please check the field in",
    "unhandled": "Something went wrong.Please try again later",
    "timeOut": "Its taking a bit longer than expected,Try again later",
    "betfairStatus": "Currently Betfair is under maintainance",
    "emptySectionCreate": "Please add atleast one deck"
  },
  "responseMessage": {
    "excelErrorMessage": "Kindly update mandatory fields in Excel",
    "sectionLastDeck": "It is last deck in Section so kindly delete the section itself",
    "cardAdded": "Card Added Successfully",
    "cardRemoved": "Card Removed Successfully",
    "resultAdded": "Result Added Successfully",
    "noDataFound": "No data found",
    "unhandled": "Something went wrong.Please try again later",
    "cardCreated": "Card Created Successfully",
    "cardUpdated": "Card Updated Successfully",
    "cardVisibilityUpdated": "Card Visibility Updated Successfully",
    "cardDeleted": "Card Deleted Successfully",
    "deckCreated": "Deck Created Successfully",
    "deckUpdated": "Deck Updated Successfully",
    "deckCoverImageUpdated": "Deck Image Updated Successfully",
    "deckCoverImageDeleted": "Deck Image Deleted Successfully",
    "deckDeleted": "Deck Deleted Successfully",
    "sectionCreated": "Section Created Successfully",
    "sectionUpdated": "Section Updated Successfully",
    "sectionDeleted": "Section Deleted Successfully",
    "visibilityUpdated": "Visibility Updated Successfully",
    "lastCard": "Last card in this deck",
    "lastDeck": "Last Deck in Section.you can't delete this deck",
    "cardImageDeleted": "Card Image Deleted Successfully",
    "sectionCreationLimitReached": "Section Limit Reached",
    "cardImageUpdated": "Card Image Updated Successfully",
    "xlEmptyMessage": "please enter data in excel"
  },
  "fileName": {
    "app": "app",
    "deckService": "deck_service",
    "cardService": "card_service",
    "sectionService": "section_service",
    "sectionRepo": "SectionRepo",
    "authorizationRepo": "authorization_repo",
    "cardRepo": "card_repo",
    "deckRepo": "deck_repo",
    "userRepo": "user_repo",
    "deckValidation": "deck_validation",
    "sectionValidation": "section_validation",
    "cardValidation": "card_validation",
    "authorizationService": "authorization_service"
  },
  "methodName": {
    "excel": "excel",
    "getNameDeckRepo": "getNameDeckRepo",
    "getSearchDeckNameService": "getSearchDeckNameService",
    "getTrendingService": "getTrendingService",
    "editGetAllDeckRepo": "editGetAllDeckRepo",
    "updateCardImageService": "updateCardImageService",
    "deleteReviseService": "deleteReviseService",
    "addReviseService": "addReviseService",
    "addFavouriteService": "addFavouriteService",
    "addUserResultRepo": "addUserResultRepo",
    "getUserResultRepo": "getUserResultRepo",
    "getFavoriteAndReviseRepo": "getFavoriteAndReviseRepo",
    "getByIdDeckAndCardRepo": "getByIdDeckAndCardRepo",
    "getByIdDeckRepo": "getByIdDeckRepo",
    "deleteDeckByIdRepo": "deleteDeckByIdRepo",
    "searchDeckRepo": "searchDeckRepo",
    "updateDeckVisibilityRepoById": "updateDeckVisibilityRepoById",
    "deleteCoverImageByIdRepo": "deleteCoverImageByIdRepo",
    "deleteAllDeckByIdRepo": "deleteAllDeckByIdRepo",
    "getTrendingRepo": "getTrendingRepo",
    "getMyDeckRepo": "getMyDeckRepo",
    "getAllDeckRepo": "getAllDeckRepo",
    "Authorization": "Authorization",
    "addUserRepo": "addUserRepo",
    "addDeckRepo": "addDeckRepo",
    "updateDeckRepo": "updateDeckRepo",
    "getAllDeckByNameRepo": "getAllDeckByNameRepo",
    "searchDeckByNameRepo": "searchDeckByNameRepo",
    "updateDeckCoverImageRepoById": "updateDeckCoverImageRepoById",
    "checkIdAndKeyRepo": "checkIdAndKeyRepo",
    "checkUserNameAndEmailRepo": "checkUserNameAndEmailRepo",
    "addClientRepo": "addClientRepo",
    "logger": "logger",
    "newClient": "newClient",
    "createDeckService": "createDeckService",
    "getAllDeckService": "getAllDeckService",
    "getDeckByIdService": "getDeckByIdService",
    "deleteDeckByIdService": "deleteDeckByIdService",
    "createCardService": "createCardService",
    "getCardByIdService": "getCardByIdService",
    "updateCardVisibilityService": "updateCardVisibilityService",
    "updateCardByIdService": "updateCardByIdService",
    "deleteCardByIdService": "deleteCardByIdService",
    "updateDeckVisibilityByIdService": "updateDeckVisibilityByIdService",
    "createSectionService": "createSectionService",
    "updateSectionService": "updateSectionService",
    "getAllSectionService": "getAllSectionService",
    "getSectionByIdService": "getSectionByIdService",
    "deleteSectionByIdService": "deleteSectionByIdService",
    "addSectionDecksService": "addSectionDecksService",
    "getDeckBySection": "getDeckBySection",
    "getSectionDeckBySection": "getSectionDeckBySection",
    "searchDeckService": "searchDeckService",
    "getSectionsService": "getSectionsService",
    "getSectionDecksService": "getSectionDecksService",
    "addSectionRepo": "addSectionRepo",
    "getByIdCardRepo": "getByIdCardRepo",
    "addCardRepo": "addCardRepo",
    "updatecardRepo": "updatecardRepo",
    "getCardDataByDeckId": "getCardDataByDeckId",
    "updateEmptyImageCardRepo": "updateEmptyImageCardRepo",
    "updateCardVisibilityRepo": "updateCardVisibilityRepo",
    "deleteImageCardRepo": "deleteImageCardRepo",
    "updateCardImageRepo": "updateCardImageRepo",
    "deleteFavouriteRepo": "deleteFavouriteRepo",
    "deleteReviseRepo": "deleteReviseRepo",
    "downloadExcelRepo": "downloadExcelRepo",
    "addFavouriteRepo": "addFavouriteRepo",
    "addReviseRepo": "addReviseRepo",
    "getAllDeckByName": "getAllDeckByName",
    "searchDeckByName": "searchDeckByName",
    "deleteDeckCoverImageByIdService": "deleteDeckCoverImageByIdService",
    "updateDeckCoverImageByIdService": "updateDeckCoverImageByIdService",
    "updateDeckByIdService": "updateDeckByIdService",
    "getDeckandCardByIdService": "getDeckandCardByIdService",
    "deckCreateValidation": "deckCreateValidation",
    "sectionSearchValidation": "sectionSearchValidation",
    "sectionCreateValidation": "sectionCreateValidation",
    "sectionUpdateValidation": "sectionUpdateValidation",
    "cardCreateValidation": "cardCreateValidation",
    "cardUpdateValidation": "cardUpdateValidation",
    "cardVisibilityUpdateValidation": "cardVisibilityUpdateValidation",
    "deleteImageValidation": "deleteImageValidation",
    "deleteCardRepo": "deleteCardRepo",
    "getCardByIdListRepo": "getCardByIdListRepo",
    "finalCardCheckRepo": "finalCardCheckRepo",
    "deleteByIdCardRepo": "deleteByIdCardRepo",
    "updateSectionRepo": "updateSectionRepo",
    "getAllSectionRepo": "getAllSectionRepo",
    "getSectionByIdRepo": "getSectionByIdRepo",
    "deleteSectionByIdRepo": "deleteSectionByIdRepo",
    "deleteSectionDeckRepo": "deleteSectionDeckRepo",
    "getUserSectionRepo": "getUserSectionRepo",
    "addSectionDecksRepo": "addSectionDecksRepo",
    "getDeckBySectionRepo": "getDeckBySectionRepo",
    "getSectionsRepo": "getSectionsRepo",
    "getSectionsDeckRepo": "getSectionsDeckRepo",
    "addUserResult": "addUserResult",
    "getUserResult": "getUserResult",
    "getFavoriteAndReviseResult": "getFavoriteAndReviseResult",
    "checkAuthorization": "checkAuthorization",
    "addClientService": "addClientService"
  },
  "fieldName": {
    "mcq":"MCQ",
    "questionImage": "question_image",
    "hintImage": "hint_image",
    "option1Image": "option1_image",
    "option2Image": "option2_image",
    "option3Image": "option3_image",
    "option4Image": "option4_image",
    "option5Image": "option5_image",
    "options": "options",
    "id": "id",
    "image": "image",
    "imageId": "imageId",
    "text": "text",
    "a": "A",
    "b": "B",
    "c": "C",
    "d": "D",
    "e": "E",
    "check": "Check",
    "questionImages": "questionImage",
    "hintImages": "hintImage",
    "option1Images": "option1Image",
    "option2Images": "option2Image",
    "option3Images": "option3Image",
    "option4Images": "option4Image",
    "option5Images": "option5Image"
  },
  "operation": {
    "get": "GET",
    "post": "POST",
    "update": "PUT",
    "delete": "DELETE"
  },
  "subOperation": {
    "entry": "ENTRY",
    "validation": "VALIDATION",
    "persists": "PERSISTS",
    "exit": "EXIT"
  },
  "result": {
    "success": "SUCCESS",
    "fail": "FAIL"
  },
  "validation_error": {
    "deckName": "deckName is required",
    "difficultyLevel": "difficultyLevel is required",
    "subject": "subject name is required",
    "file": "file is required",
    "sectionId": "sectionId is required",
    "sectionName": "Only Alphabets Allowed",
    "deckIdList": "deckId is required",
    "question": "question is required",
    "questionType": "questionType is required",
    "deckId": "deckId is required",
    "cardId": "cardId is required",
    "visibility": "visibility is required",
    "type": "type is required",
    "imageId": "imageId is required",
    "topic": "topic required"
  },
  "validate": {
    "deckName": "deckName",
    "difficultyLevel": "difficultyLevel",
    "subject": "subject",
    "topic": "topic",
    "file": "file",
    "sectionId": "SectionId",
    "sectionName": "sectionName",
    "deckIdList": "deckIdList",
    "question": "question",
    "questionType": "questionType",
    "deckId": "deckId",
    "cardId": "cardId",
    "visibility": "visibility",
    "type": "type",
    "imageId": "imageId",
    "filterText": "filterText"
  },
  "tableName": {
    "business": "business",
    "user": "user",
    "card": "card",
    "deck": "deck",
    "section": "section",
    "revisionDeck": "revision_deck",
    "favouriteDeck": "favourite_deck",
    "results": "results",
    "images": "images"
  },
  "limit": {
    "home": 4,
    "all": 10
  },
  "flashcard": "FlashCard.xlsx",
  "type": "Favourite"
}